apiVersion: apps/v1
kind: Deployment
metadata:
  name: rest
  namespace: nico-rest
  labels:
    app: rest
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rest
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: rest
    spec:
      automountServiceAccountToken: true
      containers:
      - env:
        - name: FLASK_ENV
          valueFrom:
            configMapKeyRef:
              key: flask_env
              name: config
              optional: false
        - name: FLASK_APP
          valueFrom:
            configMapKeyRef:
              key: flask_app
              name: config
              optional: false
        - name: MY_SECRET
          valueFrom:
            configMapKeyRef:
              key: message
              name: config
              optional: false
        image: slaas/slaas-rest-app:latest
        imagePullPolicy: Always
        name: rest
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        securityContext:
          readOnlyRootFilesystem: true
          runAsGroup: 10000
          runAsUser: 10000
        # readinessProbe:
        #   httpGet:
        #     path: /health
        #     port: 5000
        #     scheme: HTTP
        #   failureThreshold: 5
        #   successThreshold: 5
        #   periodSeconds: 10
        #   timeoutSeconds: 10
        resources:
          requests:
            memory: "100Mi"
            cpu: "150m"
          limits:
            memory: "500Mi"
            cpu: "250m"
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      imagePullSecrets:
      - name: regcred
      nodeSelector:
        purpose: backend
      restartPolicy: Always
      schedulerName: default-scheduler
      # serviceAccount: auth-service-account
      # serviceAccountName: auth-service-account
      shareProcessNamespace: false
      terminationGracePeriodSeconds: 30